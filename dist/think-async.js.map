{"version":3,"sources":["../src/think-async.js"],"names":["Async","scripts","id","url","callback","async","asyncId","doc","document","getElementById","loaded","fjs","getElementsByTagName","js","createElement","src","console","log","addEventListener","constructor","call","apply","triggered","parentNode","insertBefore"],"mappings":";;;;;;;;;;IAAaA,K,WAAAA,K;AACT,yBAAc;AAAA;;AACV,qBAAKC,OAAL,GAAe,EAAf;AACH;;;;oCACGC,E,EAAIC,G,EAAKC,Q,EAAU;;AAEnB,4BAAIC,QAAQ,IAAZ;AAAA,4BACIC,UAAUJ,KAAG,KADjB;AAAA,4BAEIK,MAAMC,QAFV;;AAKA;AACA,4BAAID,IAAIE,cAAJ,CAAmBH,OAAnB,CAAJ,EAAiC;AAAED,sCAAMJ,OAAN,CAAcC,EAAd,EAAkBQ,MAAlB,GAA2B,IAA3B,CAAiC;AAAS;;AAE7EL,8BAAMJ,OAAN,CAAcK,OAAd,IAAyB;AACjB,uCAAOH,GADU;AAEjB,sCAAMD,EAFW;AAGjB,4CAAYE,QAHK;AAIjB,0CAAU,KAJO;AAKjB,6CAAa;AALI,yBAAzB;;AAQA,4BAAIO,MAAMJ,IAAIK,oBAAJ,CAAyB,QAAzB,EAAmC,CAAnC,CAAV;AAAA,4BACIC,KAAKN,IAAIO,aAAJ,CAAkB,QAAlB,CADT;;AAGAD,2BAAGE,GAAH,GAASZ,GAAT;AACAU,2BAAGR,KAAH,GAAW,OAAX;AACAH,+BAAOW,GAAGX,EAAH,GAAQI,OAAf;;AAEAU,gCAAQC,GAAR,CAAYJ,EAAZ;;AAEA;;AAEAA,2BAAGK,gBAAH,CAAoB,MAApB,EAA4B,YAAW;AACnCb,sCAAMJ,OAAN,CAAcK,OAAd,EAAuBI,MAAvB,GAAgC,IAAhC;AACA,oCAAG,CAAC,EAAEN,YAAYA,SAASe,WAArB,IAAoCf,SAASgB,IAA7C,IAAqDhB,SAASiB,KAAhE,CAAJ,EAA4E;AACxEhB,8CAAMJ,OAAN,CAAcK,OAAd,EAAuBgB,SAAvB,GAAmC,IAAnC;AACAlB,iDAASS,EAAT,EAAa,CAACP,OAAD,CAAb;AACH;AACJ,yBAND;;AAQAK,4BAAIY,UAAJ,CAAeC,YAAf,CAA4BX,EAA5B,EAAgCF,GAAhC;AAEH","file":"think-async.js","sourcesContent":["export class Async {\r\n    constructor() {\r\n        this.scripts = {};\r\n    }\r\n    add(id, url, callback) {\r\n\r\n        let async = this,\r\n            asyncId = id+'-js',\r\n            doc = document;\r\n\r\n\r\n        // If script is present on the page, there is nothing to do here.\r\n        if (doc.getElementById(asyncId)) { async.scripts[id].loaded = true; return; }\r\n\r\n        async.scripts[asyncId] = {\r\n                \"url\": url,\r\n                \"id\": id,\r\n                \"callback\": callback,\r\n                \"loaded\": false,\r\n                \"triggered\": false\r\n        };\r\n\r\n        let fjs = doc.getElementsByTagName('script')[0],\r\n            js = doc.createElement('script');\r\n\r\n        js.src = url;\r\n        js.async = \"async\";\r\n        id && (js.id = asyncId);\r\n\r\n        console.log(js);\r\n\r\n        // Do callback, using underscore function check\r\n\r\n        js.addEventListener('load', function() {\r\n            async.scripts[asyncId].loaded = true;\r\n            if(!!(callback && callback.constructor && callback.call && callback.apply)) {\r\n                async.scripts[asyncId].triggered = true;\r\n                callback(js, [asyncId]);\r\n            }\r\n        });\r\n\r\n        fjs.parentNode.insertBefore(js, fjs);\r\n\r\n    };\r\n\r\n}"]}