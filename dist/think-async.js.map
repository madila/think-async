{"version":3,"sources":["../src/think-async.js"],"names":["Async","scripts","id","url","callback","async","doc","document","getElementById","loaded","fjs","getElementsByTagName","js","createElement","src","console","log","addEventListener","constructor","call","apply","triggered","parentNode","insertBefore"],"mappings":";;;;;;;;;;IAAaA,K,WAAAA,K;AACT,yBAAc;AAAA;;AACV,qBAAKC,OAAL,GAAe,EAAf;AACH;;;;oCACGC,E,EAAIC,G,EAAKC,Q,EAAU;;AAEnB,4BAAIC,QAAQ,IAAZ;AAAA,4BACIC,MAAMC,QADV;;AAIA;AACA,4BAAID,IAAIE,cAAJ,CAAmBN,EAAnB,CAAJ,EAA4B;AAAEG,sCAAMJ,OAAN,CAAcC,EAAd,EAAkBO,MAAlB,GAA2B,IAA3B,CAAiC;AAAS;;AAExEJ,8BAAMJ,OAAN,CAAcC,EAAd,IAAoB;AACZ,uCAAOC,GADK;AAEZ,4CAAYC,QAFA;AAGZ,0CAAU,KAHE;AAIZ,6CAAa;AAJD,yBAApB;;AAOA,4BAAIM,MAAMJ,IAAIK,oBAAJ,CAAyB,QAAzB,EAAmC,CAAnC,CAAV;AAAA,4BACIC,KAAKN,IAAIO,aAAJ,CAAkB,QAAlB,CADT;;AAGAD,2BAAGE,GAAH,GAASX,GAAT;AACAS,2BAAGP,KAAH,GAAW,OAAX;AACAH,+BAAOU,GAAGV,EAAH,GAAQA,EAAf;;AAEAa,gCAAQC,GAAR,CAAYJ,EAAZ;;AAEA;;AAEAA,2BAAGK,gBAAH,CAAoB,MAApB,EAA4B,YAAW;AACnCZ,sCAAMJ,OAAN,CAAcC,EAAd,EAAkBO,MAAlB,GAA2B,IAA3B;AACA,oCAAG,CAAC,EAAEL,YAAYA,SAASc,WAArB,IAAoCd,SAASe,IAA7C,IAAqDf,SAASgB,KAAhE,CAAJ,EAA4E;AACxEf,8CAAMJ,OAAN,CAAcC,EAAd,EAAkBmB,SAAlB,GAA8B,IAA9B;AACAjB,iDAASQ,EAAT,EAAa,CAACV,EAAD,CAAb;AACH;AACJ,yBAND;;AAQAQ,4BAAIY,UAAJ,CAAeC,YAAf,CAA4BX,EAA5B,EAAgCF,GAAhC;AAEH","file":"think-async.js","sourcesContent":["export class Async {\r\n    constructor() {\r\n        this.scripts = {};\r\n    }\r\n    add(id, url, callback) {\r\n\r\n        let async = this,\r\n            doc = document;\r\n\r\n\r\n        // If script is present on the page, there is nothing to do here.\r\n        if (doc.getElementById(id)) { async.scripts[id].loaded = true; return; }\r\n\r\n        async.scripts[id] = {\r\n                \"url\": url,\r\n                \"callback\": callback,\r\n                \"loaded\": false,\r\n                \"triggered\": false\r\n        };\r\n\r\n        let fjs = doc.getElementsByTagName('script')[0],\r\n            js = doc.createElement('script');\r\n\r\n        js.src = url;\r\n        js.async = \"async\";\r\n        id && (js.id = id);\r\n\r\n        console.log(js);\r\n\r\n        // Do callback, using underscore function check\r\n\r\n        js.addEventListener('load', function() {\r\n            async.scripts[id].loaded = true;\r\n            if(!!(callback && callback.constructor && callback.call && callback.apply)) {\r\n                async.scripts[id].triggered = true;\r\n                callback(js, [id]);\r\n            }\r\n        });\r\n\r\n        fjs.parentNode.insertBefore(js, fjs);\r\n\r\n    };\r\n\r\n}"]}